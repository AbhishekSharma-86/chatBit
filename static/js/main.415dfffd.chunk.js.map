{"version":3,"sources":["components/Chat/Chat.jsx","components/Join/Join.jsx","components/InfoBar/InfoBar.jsx","components/Input/Input.jsx","components/Message/Message.jsx","components/Messages/Messages.jsx","app.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","placeholder","type","onChange","event","target","value","onClick","preventDefault","to","InfoBar","src","alt","href","Input","message","setMessage","sendMessage","onKeyPress","key","Message","user","text","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","map","msg","i","Chat","location","setMessages","ENDPOINT","useEffect","queryString","parse","search","io","console","log","emit","off","on","err","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.415dfffd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'query-string'; //For retriving data from Url\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location}) => { \r\n\r\n    //State of component\r\n    const [name, setName] = useState(''); \r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const ENDPOINT = 'https://toth2000-chat-bit.herokuapp.com/';\r\n\r\n    /**This hook handle new connection and disconnection*/\r\n    useEffect(()=>{ //It is a reactHook, its equivalent is componentDidMount and componentDidUpdate\r\n        const {name, room} = queryString.parse(location.search) //location.search returns URL from ? and parser parse data\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n        console.log(`name: ${name} and room: ${room}`);\r\n        socket.emit('join', {name, room}); //Sending data to backend\r\n        \r\n        return ()=>{  //It is call when unmounting component\r\n             socket.emit('disconnect');\r\n             socket.off(); //Turn the instance of client socket off\r\n        }\r\n\r\n    }, [ENDPOINT, location.search]); //useEffect() will be called when value of array element changes\r\n\r\n\r\n    /**This hook handle messages  */\r\n    useEffect(()=>{ //With hooks we can have many useEffect\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message]);\r\n        })\r\n    }, [messages]);\r\n\r\n    const sendMessage = (event)=>{\r\n        event.preventDefault();\r\n        /**The above event prevent react from refreshing the whole page for a key press event */\r\n\r\n        if(message)\r\n        {\r\n            console.log('Message in Client', message);\r\n            socket.emit('sendMessage', message, (err)=> setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return ( \r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room}/>\r\n                <Messages messages={messages} name={name}/>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n\r\n","import React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Join.css'\r\n\r\nconst Join = () => {\r\n  const [ name, setName ] = useState('');\r\n  const [ room, setRoom ] = useState('');\r\n\r\n  return (\r\n    <div className=\"joinOuterContainer\">\r\n      <div className=\"joinInnerContainer\">\r\n        <h1 className=\"heading\"> </h1>\r\n        <div>\r\n          <input\r\n            placeholder=\"Name\"\r\n            className=\"joinInput\"\r\n            type=\"text\"\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            placeholder=\"Room\"\r\n            className=\"joinInput mt-20\"\r\n            type=\"text\"\r\n            onChange={(event) => setRoom(event.target.value)}\r\n          />\r\n        </div>\r\n        <Link\r\n          onClick={(event) => (!name || !room ? event.preventDefault() : null)}\r\n          to={`/chat?name=${name}&room=${room}`}\r\n        >\r\n          <button className=\"button\" type=\"submit\">\r\n            Sign In\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n  ","import React from 'react';\r\nimport './InfoBar.css';\r\n\r\nconst InfoBar = ({room})=>{\r\n   return (\r\n   <div className=\"infoBar\">\r\n        <div className=\"leftInnerContainer\">\r\n            <img className=\"onlineIcon\" src={\"\"} alt=\"icon\"/>\r\n            <h3>{room}</h3>\r\n        </div>\r\n        \r\n        <div className=\"rightInnerContainer\">\r\n            <a href=\"/\"><img src={\"\"} alt=\"closeImg\"/></a>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default InfoBar;","import React from 'react';\r\n\r\nconst Input = ({message, setMessage, sendMessage})=>{\r\n\r\n    return(\r\n    \r\n    <form className=\"form\">\r\n        <input \r\n                value={message} \r\n                onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null} />\r\n        <button className=\"sendButton\" onClick={(event=> sendMessage(event))}>Send</button>\r\n    </form>    \r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({message: {user, text}, name})=>{\r\n\r\n    const trimmedName = name.trim().toLowerCase();\r\n    let isSentByCurrentUser = (user === trimmedName);\r\n   \r\n\r\n    return (\r\n        isSentByCurrentUser ?\r\n        (\r\n            <div className=\"messageContainer justifyEnd\">\r\n                <p className=\"sentText pr-10\">{trimmedName}</p>\r\n                <div className=\"messageBox backgroundBlue\">\r\n                    <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n                </div>\r\n            </div>\r\n        )   :\r\n        (\r\n            <div className=\"messageContainer justifyStart\">\r\n                <div className=\"messageBox backgroundLight\">\r\n                    <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n                </div>\r\n                <p className=\"sentText pl-10\">{user}</p>\r\n            </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nimport Message from '../Message/Message';\r\n\r\nconst Messages = ({messages, name}) => {\r\n\r\n    return (\r\n        \r\n        <ScrollToBottom className=\"messages\">\r\n            {messages.map((msg, i)=> <div key={i}>\r\n                <Message message={msg} name={name} />\r\n            </div>)}\r\n        </ScrollToBottom>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Join from './components/Join/Join'\r\nimport Chat from './components/Chat/Chat';\r\n\r\nconst App = ()=>{\r\n    return (\r\n    <Router>\r\n        <Route path=\"/\" exact component={Join}/>\r\n        <Route path=\"/chat\" component={Chat}/>\r\n    </Router>\r\n)};\r\n\r\nexport default App;","import React from 'react';\r\nimport  ReactDOM  from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}